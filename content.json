{"pages":[{"title":"About","text":"","link":"/about/index.html"}],"posts":[{"title":"我的Zotero配置","text":"本文对Zotero的配置进行了整理，供自己将来参考。 Zotero作为文献管理软件，在整个工作流中担任对文献的整理、阅读管理任务，并提供面向上游输入与下游输出的接口。 在文献的输入部分，通过Zotero浏览器插件和Sci-Hub解析器实现对英文文献源信息和pdf的一键抓取，通过茉莉花插件实现对知网文献的抓取。收集到文献之后Zotero会通过WebDav在多个设备间进行同步，在阅读过程中利用翻译插件对英文文献实现选中翻译，利用Markdown插件实现更强大的内置笔记。在写作输出阶段，通过Zotero官方的Word插件联动word快速生成参考文献，并利用Word宏实现参考文献的交叉引用。 至此，覆盖文献阅读全流程的Zotero就配置完成了。 输入 浏览器插件 Zotero官方提供了浏览器插件Zotero Connector，支持Chrome、Safari、MS Edge等浏览器，可以在对应浏览器官方的扩展商店进行安装。 以Chorme为例，可以在Chome 网上商店进行下载安装。 Sci-Hub 解析器 参考这篇文章配置Sci-Hub解析器，配合浏览器插件使用，可以直接在Sci-Hub下载文献。 修改extensions.zotero.findPDFs.resolvers为 123456789{ \"name\":\"Sci-Hub\", \"method\":\"GET\", \"url\":\"https://sci-hub.ren/{doi}\", \"mode\":\"html\", \"selector\":\"#pdf\", \"attribute\":\"src\", \"automatic\":true} 知网文献抓取 安装茉莉花插件、PDFtk Server，并更新解析器（Translator），Zotero和网页插件都要更新，可能需要多点几次更新。 茉莉花插件在这个仓库下载xpi按照文档安装即可。 PDFtk Server按照官网指示进行安装即可。 处理 利用WebDav多端同步 Zotero作为跨平台软件，在各个设备上都有自己的客户端，我希望能在iPad端和Mac/PC端同步PDF和标注。Zotero官方提供了一个云同步服务，但是速度比较慢，而且免费使用限制了300MB的容量，不能满足我的文献同步要求。因此选择坚果云的WebDav服务进行同步。 关于Zotero如何使用坚果云，可以查看坚果云官方的这篇文档。 翻译插件 安装Zotero PDF Translate插件，在这个仓库下载xpi按照文档安装即可。 Markdown笔记插件 安装markdownhere4zotero插件，在这个仓库下载xpi并安装即可。该插件的公式渲染默认使用谷歌的服务，可以按照这篇文章修改至国内服务。 Update: 在Zotero 6.0.14版本中，官方在笔记中支持了公式功能。但是由于不是全功能markdown，插入图片等还是不支持。 输出 Word插件生成参考文献 Zotero安装时会自动在Word添加插件，可以在菜单栏看到，如果出现找不到插件的情况， 可以参考这篇文章手动将插件复制到Word启动项中。 如果Zotero没有所需的引用格式，可以在设置-引用-样式-获取更多样式中搜索并安装。 参考文献交叉引用 先正常使用Zotero添加参考文献，然后利用Word宏实现修改参考文献为交叉引用。由于Zotero本身添加参考文献也是利用Word宏实现的，将来官方可能也会添加交叉引用的功能。 对于如何添加Word宏参考这篇文章。 宏代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216Public Sub ZoteroLinkCitation() ' get selected area (if applicable) Dim nStart&amp;, nEnd&amp; nStart = Selection.Start nEnd = Selection.End ' toggle screen updating Application.ScreenUpdating = False ' define variables Dim title As String Dim titleAnchor As String Dim style As String Dim fieldCode As String Dim numOrYear As String Dim pos&amp;, n1&amp;, n2&amp;, n3&amp; ActiveWindow.View.ShowFieldCodes = True Selection.Find.ClearFormatting ' find the Zotero bibliography With Selection.Find .Text = \"^d ADDIN ZOTERO_BIBL\" .Replacement.Text = \"\" .Forward = True .Wrap = wdFindContinue .Format = False .MatchCase = False .MatchWholeWord = False .MatchWildcards = False .MatchSoundsLike = False .MatchAllWordForms = False End With Selection.Find.Execute ' add bookmark for the Zotero bibliography With ActiveDocument.Bookmarks .Add Range:=Selection.Range, Name:=\"Zotero_Bibliography\" .DefaultSorting = wdSortByName .ShowHidden = True End With ' loop through each field in the document For Each aField In ActiveDocument.Fields ' check if the field is a Zotero in-text reference '################################################## If InStr(aField.Code, \"ADDIN ZOTERO_ITEM\") &gt; 0 Then fieldCode = aField.Code '############# ' Prepare ' Plain citation== Format of Textfield shown ' must be in Brackets Dim plain_Cit As String plCitStrBeg = \"\"\"plainCitation\"\":\"\"[\" plCitStrEnd = \"]\"\"\" n1 = InStr(fieldCode, plCitStrBeg) n1 = n1 + Len(plCitStrBeg) n2 = InStr(Mid(fieldCode, n1, Len(fieldCode) - n1), plCitStrEnd) - 1 + n1 plain_Cit = Mid$(fieldCode, n1 - 1, n2 - n1 + 2) 'Reference 'as shown' in word as a string 'Title array in fieldCode (all referenced Titles within this field) Dim array_RefTitle(32) As String i = 0 Do While InStr(fieldCode, \"\"\"title\"\":\"\"\") &gt; 0 n1 = InStr(fieldCode, \"\"\"title\"\":\"\"\") + Len(\"\"\"title\"\":\"\"\") n2 = InStr(Mid(fieldCode, n1, Len(fieldCode) - n1), \"\"\",\"\"\") - 1 + n1 If n2 &lt; n1 Then 'Exception the type 'Article' n2 = InStr(Mid(fieldCode, n1, Len(fieldCode) - n1), \"}\") - 1 + n1 - 1 End If array_RefTitle(i) = Mid(fieldCode, n1, n2 - n1) fieldCode = Mid(fieldCode, n2 + 1, Len(fieldCode) - n2 - 1) i = i + 1 Loop Titles_in_Cit = i 'Number array with References shown in PlainCit 'Numer is equal or less than Titels, depending on the type '[3], [8]-[10]; [2]-[4]; [2], [4], [5] ' All citations have to be in Brackets each! [3], [8] not [3, 8] ' This doesnt work otherwise! ' --&gt; treatment of other delimiters could be implemented here Dim RefNumber(32) As String i = 0 Do While (InStr(plain_Cit, \"]\") Or InStr(plain_Cit, \"[\")) &gt; 0 n1 = InStr(plain_Cit, \"[\") n2 = InStr(plain_Cit, \"]\") RefNumber(i) = Mid(plain_Cit, n1 + 1, n2 - (n1 + 1)) plain_Cit = Mid(plain_Cit, n2 + 1, Len(plain_Cit) - (n2 + 1) + 1) i = i + 1 Loop Refs_in_Cit = i 'treat only the shown references (skip the rest) '[3], [8]-[10] --&gt; skip [9] 'Order of titles given from fieldcode, not checked! If Titles_in_Cit &gt; Refs_in_Cit Then array_RefTitle(Refs_in_Cit - 1) = array_RefTitle(Titles_in_Cit - 1) i = 1 Do While Refs_in_Cit + i &lt;= Titles_in_Cit array_RefTitle(Refs_in_Cit + i - 1) = \"\" i = i + 1 Loop End If '############# 'Make the links For Refs = 0 To Refs_in_Cit - 1 Step 1 title = array_RefTitle(Refs) array_RefTitle(Refs) = \"\" ' make title a valid bookmark name titleAnchor = title titleAnchor = MakeValidBMName(titleAnchor) ActiveWindow.View.ShowFieldCodes = False Selection.GoTo What:=wdGoToBookmark, Name:=\"Zotero_Bibliography\" '' locate the corresponding reference in the bibliography '' by searching for its title Selection.Find.ClearFormatting With Selection.Find .Text = Left(title, 255) .Replacement.Text = \"\" .Forward = True .Wrap = wdFindContinue .Format = False .MatchCase = False .MatchWholeWord = False .MatchWildcards = False .MatchSoundsLike = False .MatchAllWordForms = False End With Selection.Find.Execute ' select the whole caption (for mouseover tooltip) Selection.MoveStartUntil (\"[\"), Count:=wdBackward Selection.MoveEndUntil (vbBack) lnkcap = \"[\" &amp; Selection.Text lnkcap = Left(lnkcap, 70) ' add bookmark for the reference within the bibliography Selection.Shrink With ActiveDocument.Bookmarks .Add Range:=Selection.Range, Name:=titleAnchor .DefaultSorting = wdSortByName .ShowHidden = True End With ' jump back to the field aField.Select ' find and select the numeric part of the field which will become the hyperlink Selection.Find.ClearFormatting With Selection.Find .Text = RefNumber(Refs) .Replacement.Text = \"\" .Forward = True .Wrap = wdFindContinue .Format = False .MatchCase = False .MatchWholeWord = False .MatchWildcards = False .MatchSoundsLike = False .MatchAllWordForms = False End With Selection.Find.Execute numOrYear = Selection.Range.Text &amp; \"\" ' store current style style = Selection.style ' Generate the Hyperlink --&gt;Forward! ActiveDocument.Hyperlinks.Add Anchor:=Selection.Range, Address:=\"\", SubAddress:=titleAnchor, ScreenTip:=lnkcap, TextToDisplay:=\"\" &amp; numOrYear ' reset the style Selection.style = style ' comment if you want standard link style aField.Select With Selection.Font .Underline = wdUnderlineNone .ColorIndex = wdBlack End With Next Refs 'References in Cit End If 'If Zotero-Field '######################### Next aField ' next field ' go back to original range selected ActiveWindow.View.ShowFieldCodes = False ActiveDocument.Range(nStart, nEnd).Select End Sub Function MakeValidBMName(strIn As String) Dim pFirstChr As String Dim i As Long Dim tempStr As String strIn = Trim(strIn) pFirstChr = Left(strIn, 1) If Not pFirstChr Like \"[A-Za-z]\" Then strIn = \"A_\" &amp; strIn End If For i = 1 To Len(strIn) Select Case Asc(Mid$(strIn, i, 1)) Case 49 To 57, 65 To 90, 97 To 122 tempStr = tempStr &amp; Mid$(strIn, i, 1) Case Else tempStr = tempStr &amp; \"_\" End Select Next i tempStr = Replace(tempStr, \" \", \" \") MakeValidBMName = Left(tempStr, 40) End Function","link":"/2022/09/28/%E6%88%91%E7%9A%84Zotero%E9%85%8D%E7%BD%AE/"},{"title":"使用touch id验证sudo","text":"sudo权限修改文件/etc/pam.d/sudo，在pam_smartcard.so的下一行添加auth sufficient pam_tid.so，保存即可。 来源：Use TouchID to Authenticate sudo on macOS","link":"/2022/10/30/%E4%BD%BF%E7%94%A8touch-id%E9%AA%8C%E8%AF%81sudo/"},{"title":"Nginx配置ModSecurity","text":"摘要： 本文介绍了WAF（Web Application Firewall）中的ModSecurity，它是一个用于过滤和拦截HTTP流量的WAF，通常部署在反向代理服务器中。ModSecurity通过一组规则集进行工作，并允许用户指定需要过滤的请求特征以及服务器应该采取的操作。文章提供了编译ModSecurity的步骤，包括从GitHub克隆源码并解决编译过程中的依赖问题。接下来，文章介绍了如何将ModSecurity与Nginx服务器连接起来，通过编译ModSecurity-nginx和Nginx，并配置Nginx以使用ModSecurity。最后，文章演示了如何启动ModSecurity并配置WAF过滤规则，包括指定规则集和使用自定义规则集。通过这些步骤，读者可以了解如何使用ModSecurity构建和配置WAF以保护Web应用程序。 WAF - ModSecurity ModSecurity是一个WAF（Web Application Firewall），可以过滤并拦截Http流量，通常被部署在反向代理服务器中。 WAF通常根据一组规则集（Core Rule Set）进行工作，用户可以指定需要过滤的请求特征，并给出服务器所需进行的操作。 环境说明 编译ModSecurity 从Github克隆源码：https://github.com/SpiderLabs/ModSecurity 1234$ ./build.sh$ ./configure$ make$ sudo make install 利用make进行编译，该项目的makefile通过./configure自动生成。在编译过程中涉及一些依赖： pcre：正则表达式库 YAJL：Json解析库 LMDB：Key-Value数据库 GeoIP：IP与地理位置映射管理 libmaxminddb：地理位置数据库 可以去对应网站下载源码手动编译，也可以利用包管理器安装相关依赖。解决依赖问题后即可安装LibModSecurity。 12345678910111213141516171819202122232425262728293031323334353637383940❯ tree.├── bin│ └── modsec-rules-check├── include│ └── modsecurity│ ├── actions│ │ └── action.h│ ├── anchored_set_variable.h│ ├── anchored_set_variable_translation_proxy.h│ ├── anchored_variable.h│ ├── audit_log.h│ ├── collection│ │ ├── collection.h│ │ └── collections.h│ ├── debug_log.h│ ├── intervention.h│ ├── modsecurity.h│ ├── reading_logs_via_rule_message.h│ ├── rule.h│ ├── rule_marker.h│ ├── rule_message.h│ ├── rule_unconditional.h│ ├── rule_with_actions.h│ ├── rule_with_operator.h│ ├── rules.h│ ├── rules_exceptions.h│ ├── rules_set.h│ ├── rules_set_phases.h│ ├── rules_set_properties.h│ ├── transaction.h│ ├── variable_origin.h│ └── variable_value.h└── lib ├── libmodsecurity.3.dylib ├── libmodsecurity.a ├── libmodsecurity.dylib -&gt; libmodsecurity.3.dylib ├── libmodsecurity.la └── pkgconfig └── modsecurity.pc 编译Nginx、ModSecurity-nginx ModSecutiry可以部署于多种不同的Web服务器，Nginx，Apache等等，为了能用于不同的服务器，ModSecurity提供了一系列的连接器，将其与对应的服务器连接起来。 ModSecurity-nginx是连接ModSecurity和Nginx的桥梁，为了使ModSecurity能部署于Nginx，需要将ModSecurity-nginx与Nginx一起编译，并连接上一步安装的ModSecurity链接库。 这里有一个小坑，我最初在本地是使用 Homebrew 安装的 Nginx，但是没有找到如何为其添加外部模块的方法，最后不得不手动编译Nginx 首先需要下载Nginx源码（https://github.com/nginx/nginx）与ModSecurity-nginx源码（https://github.com/SpiderLabs/ModSecurity-nginx），并在编译Nginx时将ModSecurity-nginx指定为其外部模块： 12./configure --add-module=/path/to/ModSecurity-nginxsudo make install 在编译Nginx时遇到问题，总是提示无法找到ModSecurity链接库，按照网上的做法设置环境变量： 1234# modsecurityexport MODSECURITY_LIB=\"/usr/local/modsecurity/lib\"export MODSECURITY_INC=\"/usr/local/modsecurity/include\"export LD_LIBRARY_PATH=\"/usr/local/modsecurity/lib\" 后仍然报错。通过检查编译脚本发现，脚本会在检查完Nginx本身的条件之后检查第三方模块的条件，而报错的原因在于ngx_found这个变量没有被正确赋值： 12345678910 # modsecurity-nginx/config . auto/feature if [ $ngx_found = no ]; then cat &lt;&lt; END $0: error: ngx_http_modsecurity_module requires the ModSecurity library and MODSECURITY_LIB is defined as \"$MODSECURITY_LIB\" and MODSECURITY_INC (path for modsecurity.h) \"$MODSECURITY_INC\", but we cannot find ModSecurity there.END exit 1 fi 这个变量定义自nginx-1.24.0/auto/feature，进一步检查脚本发现，测试的原理是拼贴出一段C代码，并按照读取到的环境变量进行编译，如果能够编译成功则说明库正确安装。 1234567891011121314# nginx-1.24.0/auto/featurecat &lt;&lt; END &gt; $NGX_AUTOTEST.c#include &lt;sys/types.h&gt;$NGX_INCLUDE_UNISTD_H$ngx_feature_incsint main(void) { $ngx_feature_test; return 0;}END 其中的变量$ngx_feature_incs就是引入头文件ngx_feature_incs=\"#include &lt;modsecurity/modsecurity.h&gt;\" $ngx_feature_test是简单的一句输出ngx_feature_test='printf(\"hello\");' 问题出现在上面的C代码用到了printf但是并没有引入头文件stdio.h，导致无法通过编译。但是脚本认为没有通过编译就是因为没有正确安装ModSecurity。只要添加一句#include&lt;stdio.h&gt;，即可成功完成编译。 启动ModSecurity并配置WAF过滤规则 在Nginx的配置文件中开启modsecurty并指定其采用的规则集 123456789# nginx.confmodsecurity on; # 开启ModSecuritylocation / { modsecurity_rules_file modsec_includes.conf; #指定规则集 root html; index index.html index.htm;} 规则集简单起见直接使用owasp-modsecurity-crs，在下载规则集后，将其导入到我们的自定义规则集modsec_includes.conf当中： 123include modsecurity.confinclude owasp-modsecurity-crs/crs-setup.confinclude owasp-modsecurity-crs/rules/*.conf 配置好规则之后重启Nginx，用curl发送请求，即可在log中看到。 为了测试modsecurity的拦截效果，试着自定义规则集中添加一条规则： 1SecRule ARGS:testparam \"@contains test\" \"id:1234,deny,status:403\" 这条规则说明当请求中包含参数 testparam 同时其值为 test 时，拦截请求并返回 403。","link":"/2023/07/02/Nginx%E9%85%8D%E7%BD%AEModSecurity/"},{"title":"我的开源活动参与心得","text":"Git / Github 想要参与开源活动，Git 和 Github 是两个绕不开的话题， 参与开源活动 开源社区 开源活动推荐","link":"/2023/07/04/%E6%88%91%E7%9A%84%E5%BC%80%E6%BA%90%E6%B4%BB%E5%8A%A8%E5%8F%82%E4%B8%8E%E5%BF%83%E5%BE%97/"},{"title":"使用Latex完成毕业论文","text":"","link":"/2025/02/27/%E4%BD%BF%E7%94%A8Latex%E5%AE%8C%E6%88%90%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/"}],"tags":[{"name":"科研","slug":"科研","link":"/tags/%E7%A7%91%E7%A0%94/"},{"name":"工具","slug":"工具","link":"/tags/%E5%B7%A5%E5%85%B7/"},{"name":"MacOS","slug":"MacOS","link":"/tags/MacOS/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"Nginx","slug":"Nginx","link":"/tags/Nginx/"},{"name":"网络","slug":"网络","link":"/tags/%E7%BD%91%E7%BB%9C/"},{"name":"开源","slug":"开源","link":"/tags/%E5%BC%80%E6%BA%90/"},{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"}],"categories":[]}